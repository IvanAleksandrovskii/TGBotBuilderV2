"""added custom tests

Revision ID: a2d84e9bf18b
Revises: 97fdc76ef75a
Create Date: 2025-01-13 08:46:27.024894

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a2d84e9bf18b'
down_revision: Union[str, None] = '97fdc76ef75a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('custom_tests',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('allow_back', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_custom_tests'))
    )
    op.create_table('custom_questions',
    sa.Column('question_text', sa.String(), nullable=False),
    sa.Column('is_quiz_type', sa.Boolean(), nullable=False),
    sa.Column('test_id', sa.UUID(), nullable=False),
    sa.Column('answer1_text', sa.String(), nullable=True),
    sa.Column('answer1_score', sa.Integer(), nullable=True),
    sa.Column('answer2_text', sa.String(), nullable=True),
    sa.Column('answer2_score', sa.Integer(), nullable=True),
    sa.Column('answer3_text', sa.String(), nullable=True),
    sa.Column('answer3_score', sa.Integer(), nullable=True),
    sa.Column('answer4_text', sa.String(), nullable=True),
    sa.Column('answer4_score', sa.Integer(), nullable=True),
    sa.Column('answer5_text', sa.String(), nullable=True),
    sa.Column('answer5_score', sa.Integer(), nullable=True),
    sa.Column('answer6_text', sa.String(), nullable=True),
    sa.Column('answer6_score', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('(answer1_text IS NOT NULL AND answer1_score IS NOT NULL) OR (answer1_text IS NULL AND answer1_score IS NULL)', name=op.f('ck_custom_questions_check_answer1_completeness')),
    sa.CheckConstraint('(answer2_text IS NOT NULL AND answer2_score IS NOT NULL) OR (answer2_text IS NULL AND answer2_score IS NULL)', name=op.f('ck_custom_questions_check_answer2_completeness')),
    sa.CheckConstraint('(answer3_text IS NOT NULL AND answer3_score IS NOT NULL) OR (answer3_text IS NULL AND answer3_score IS NULL)', name=op.f('ck_custom_questions_check_answer3_completeness')),
    sa.CheckConstraint('(answer4_text IS NOT NULL AND answer4_score IS NOT NULL) OR (answer4_text IS NULL AND answer4_score IS NULL)', name=op.f('ck_custom_questions_check_answer4_completeness')),
    sa.CheckConstraint('(answer5_text IS NOT NULL AND answer5_score IS NOT NULL) OR (answer5_text IS NULL AND answer5_score IS NULL)', name=op.f('ck_custom_questions_check_answer5_completeness')),
    sa.CheckConstraint('(answer6_text IS NOT NULL AND answer6_score IS NOT NULL) OR (answer6_text IS NULL AND answer6_score IS NULL)', name=op.f('ck_custom_questions_check_answer6_completeness')),
    sa.ForeignKeyConstraint(['test_id'], ['custom_tests.id'], name=op.f('fk_custom_questions_test_id_custom_tests')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_custom_questions'))
    )
    op.create_table('test_pack_custom_tests',
    sa.Column('test_pack_id', sa.UUID(), nullable=False),
    sa.Column('custom_test_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['custom_test_id'], ['custom_tests.id'], name=op.f('fk_test_pack_custom_tests_custom_test_id_custom_tests'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['test_pack_id'], ['test_packs.id'], name=op.f('fk_test_pack_custom_tests_test_pack_id_test_packs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('test_pack_id', 'custom_test_id', name=op.f('pk_test_pack_custom_tests'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_pack_custom_tests')
    op.drop_table('custom_questions')
    op.drop_table('custom_tests')
    # ### end Alembic commands ###
